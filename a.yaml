apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq
  namespace: phoenix-stage
secrets:
  - name: phoenix-rabbitmq
---
apiVersion: v1
data:
  rabbitmq.conf: |-
    ## Username and password
    ##
    default_user = dreadmin
    default_pass = CHANGEME
    ## Clustering
    ##
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    loopback_users.guest = false
    #default_vhost = phoenix-stage-vhost
    #disk_free_limit.absolute = 50MB
    #load_definitions = /app/load_definition.json
    ## Prometheus metrics
    ##
    prometheus.tcp.port = 15692
    prometheus.path = "/metrics"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq-config
  namespace: phoenix-stage
---
apiVersion: v1
data:
  rabbitmq-erlang-cookie: emhjRmpEUjFLeXY2R3VsdU5QS1hFMnM3NUJ0ZmdpcHM=
  rabbitmq-password: dm11VGFYalg1UU1RVFQ9PQ==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq
  namespace: phoenix-stage
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq
  namespace: phoenix-stage
spec:
  ports:
    - name: amqp
      nodePort: null
      port: 5672
      targetPort: amqp
    - name: epmd
      nodePort: null
      port: 4369
      targetPort: epmd
    - name: dist
      nodePort: null
      port: 25672
      targetPort: dist
    - name: http-stats
      nodePort: null
      port: 15672
      targetPort: stats
    - name: metrics
      nodePort: null
      port: 15692
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/name: rabbitmq
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq-headless
  namespace: phoenix-stage
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: http-stats
      port: 15672
      targetPort: stats
  selector:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/name: rabbitmq
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq
  namespace: phoenix-stage
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: phoenix-rabbitmq
      app.kubernetes.io/name: rabbitmq
  serviceName: phoenix-rabbitmq-headless
  template:
    metadata:
      annotations:
        checksum/config: 17622da36008bf78766d3b2099b8a57e6e41363c71132fa523c1fd5d2aac7d92
        checksum/secret: fcf86b6c5555573dfd194951839b25b151d9fd4fead039ba26b27f8ee81dbbe5
        prometheus.io/path: /metrics
        prometheus.io/port: "15692"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: phoenix-rabbitmq
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-8.22.2
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: phoenix-rabbitmq
                    app.kubernetes.io/name: rabbitmq
                namespaces:
                  - phoenix-stage
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: phoenix-rabbitmq-headless
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: RABBITMQ_MNESIA_DIR
              value: /bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-erlang-cookie
                  name: phoenix-rabbitmq
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: "no"
            - name: RABBITMQ_SECURE_PASSWORD
              value: "yes"
            - name: RABBITMQ_USERNAME
              value: dreadmin
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-password
                  name: phoenix-rabbitmq
            - name: RABBITMQ_PLUGINS
              value:
                rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_prometheus,
                rabbitmq_auth_backend_ldap, rabbitmq_management, rabbitmq_peer_discovery_k8s,
                rabbitmq_prometheus
            - name: RABBITMQ_DEFAULT_USER
              value: dreadmin
            - name: RABBITMQ_DEFAULT_PASS
              value: vmuTaXjX5QMQTT==
          image: ecr.ase-usgva-p21.missionready.local:31001/bitnami/rabbitmq:3.9.5-management
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -ec
                  - |
                    if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then
                        /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d  "false"
                    else
                        rabbitmqctl stop_app
                    fi
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q ping
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
          name: rabbitmq
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 25672
              name: dist
            - containerPort: 15672
              name: stats
            - containerPort: 4369
              name: epmd
            - containerPort: 9419
              name: metrics
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /bitnami/rabbitmq/conf
              name: configuration
            - mountPath: /bitnami/rabbitmq/mnesia
              name: data
      imagePullSecrets:
        - name: acr-secret
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: phoenix-rabbitmq
      terminationGracePeriodSeconds: 120
      volumes:
        - configMap:
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
            name: phoenix-rabbitmq-config
          name: configuration
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/instance: phoenix-rabbitmq
          app.kubernetes.io/name: rabbitmq
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: ase-node-local
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-rabbitmq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.22.2
  name: phoenix-rabbitmq
  namespace: phoenix-stage
spec:
  ingress:
    - ports:
        - port: 4369
        - port: 5672
        - port: 5671
        - port: 25672
        - port: 15672
    - ports:
        - port: 15692
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: phoenix-rabbitmq
      app.kubernetes.io/name: rabbitmq
