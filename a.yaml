apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - csi
  - secret
  - downwardAPI
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
rules:
- apiGroups:
  - extensions
  resourceNames:
  - phoenix-grafana
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana-clusterrole
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: phoenix-grafana
subjects:
- kind: ServiceAccount
  name: phoenix-grafana
  namespace: phoenix-stage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: phoenix-grafana-clusterrole
subjects:
- kind: ServiceAccount
  name: phoenix-grafana
  namespace: phoenix-stage
---
apiVersion: v1
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
---
apiVersion: v1
data:
  admin-password: aGNqNk9weGNuV2t1YVRiRE90QWloeHdKTE9FTjNiQ2FPQ1RHR2xuNQ==
  admin-user: YWRtaW4=
  ldap-toml: ""
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
spec:
  ports:
  - name: service
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/name: grafana
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: phoenix-grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.4.2
    helm.sh/chart: grafana-6.24.1
  name: phoenix-grafana
  namespace: phoenix-stage
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: phoenix-grafana
      app.kubernetes.io/name: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 29e71bec037ea0eece29019cc49b2213e556bb33c522152cc20715200c468f23
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: e8d21e082bf81e8054881c3767d30550e35e48c5836c8c1a4d624546d8407578
      labels:
        app.kubernetes.io/instance: phoenix-grafana
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: phoenix-grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: phoenix-grafana
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
        image: ecr.ase-usgva-p21.missionready.local:31001/ironbank/opensource/grafana/grafana:8.4.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
        name: grafana
        ports:
        - containerPort: 80
          name: service
          protocol: TCP
        - containerPort: 3000
          name: grafana
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        resources: {}
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          name: config
          subPath: grafana.ini
        - mountPath: /var/lib/grafana
          name: storage
      enableServiceLinks: true
      imagePullSecrets:
      - name: ase-ecr-credentials
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccountName: phoenix-grafana
      volumes:
      - configMap:
          name: phoenix-grafana
        name: config
      - emptyDir: {}
        name: storage
